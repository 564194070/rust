fn main() {

    // 标量类型
    // 整形
    // i有符号 u无符号
    let x: i32 = 10;
    // 浮点型
    // f32/f64
    let y: f32 = 3.0;
    // 布尔型
    let f: bool = false;
    // 字符类型
    let z: char = 'Z';


    // 符合类型
    // 元组
    // 将多个其他类型的值组合进一个复合类型，声明后长度不变 可以解构元组
    let tup: (i32, f64, u8) = (500, 6.4, 1);
    let (x, y, z) = tup;
    // 数组
    // 将多个相同类型的元素放到一个数组中，数组长度是固定的
    // 数组应对有固定数量的元素
    let a = [1, 2, 3, 4, 5];
    let a1: [i32; 5] = [1, 2, 3, 4, 5];
    let a2 = [3; 5];
    // 访问数组
    let first = a[0];
    let second = a[1];
}